package _20220929_RemoveKDigits;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

@RunWith(Parameterized.class)
public class SolutionTest {

    private Solution solution;

    @Parameterized.Parameter
    public String num;

    @Parameterized.Parameter(1)
    public int k;

    @Parameterized.Parameter(2)
    public String expected;

    @Parameterized.Parameters
    public static Object[][] data() {
        return new Object[][]{
                {"120", 2, "0"},
                {"1432219", 3, "1219"},
                {"10200", 1, "200"},
                {"10", 2, "0"},
                {
                        2,
},
                {

                        1320,
                        "0"
                },
                {

                        1021,
                        "734509837590837405897384597289304671289364890217438092175480923475893147589037458973408957018923745893890347589034750893475980347589347508934275902387589347508934759081375089374590837459803743874"
                }
        };
    }

    @Before
    public void setup() {
        solution = new Solution();
    }

    @Test
    public void test() {
        String result = solution.removeKdigits(num, k);
        Assert.assertEquals(expected, result);
    }

}